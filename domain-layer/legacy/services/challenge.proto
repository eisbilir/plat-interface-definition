syntax = "proto3";

package topcoder.domain.legacy_challenge_service;

import "common/common.proto";
import "domain-layer/legacy/challenge.proto";
import "google/protobuf/empty.proto";

service LegacyChallenge {
    rpc CheckChallengeExists(topcoder.domain.legacy_challenge.LegacyChallengeId)
        returns (topcoder.domain.legacy_challenge.CheckChallengeExistsResponse);
    rpc Lookup(topcoder.common.LookupCriteria)
        returns (topcoder.domain.legacy_challenge.LegacyChallengeList);
    rpc Update(topcoder.domain.legacy_challenge.UpdateChallengeInput)
        returns (topcoder.domain.legacy_challenge.LegacyChallenge);
    rpc ActivateChallenge(topcoder.domain.legacy_challenge.LegacyChallengeId)
        returns (google.protobuf.Empty);
    rpc CloseChallenge(topcoder.domain.legacy_challenge.CloseChallengeInput)
        returns (google.protobuf.Empty);
    rpc GetLegacyChallenge(topcoder.domain.legacy_challenge.LegacyChallengeId)
        returns(topcoder.domain.legacy_challenge.LegacyChallenge);
    rpc Create(topcoder.domain.legacy_challenge.CreateChallengeInput)
      returns (topcoder.common.CreateResult);
}
