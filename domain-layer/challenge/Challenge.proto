syntax = "proto3";

package topcoder.domain.challenge;

import "common/Common.proto";
import "google/protobuf/timestamp.proto";

enum Track {
    DEVELOP = 0;
    DESIGN = 1;
    DATA_SCIENCE = 2;
    QA = 3;
}

enum SubTrack {
    FIRST_2_FINISH = 0;
    CODE = 1;
    DESIGN_FIRST_2_FINISH = 3;
    ASSEMBLY_COMPETITION = 4 [deprecated = true];
    UI_PROTOTYPE_COMPETITION = 5 [deprecated = true];
    ARCHITECTURE = 6 [deprecated = true];
    BUG_HUNT = 7;
    MARATHON_MATCH = 8;
    SPECIFICATION = 9 [deprecated = true];
    WEB_DESIGNS = 10;
    TEST_SCENARIOS = 11 [deprecated = true];
    TEST_SUITES = 12 [deprecated = true];
}

enum ReviewType {
    COMMUNITY = 0;
    INTERNAL = 1;
}

enum ConfidentialityType {
    PUBLIC = 0;
    PRIVATE = 1;
}

enum PhaseName {
    REGISTRATION = 0;
    SUBMISSION = 1;
    SCREENING = 2;
    REVIEW = 3;
    APPEALS = 4;
    APPEALS_RESPONSE = 5;
    AGGREGATION = 6;
    FINAL_FIX = 7;
    POST_MORTEM = 8;
    ITERATIVE_REVIEW = 9;
}

message Challenge {
    string id = 1;
    optional int32 legacy_id = 2;
    string name = 3;
    string type_id = 4;
    string track_id = 5;
    optional Legacy legacy = 6;
    optional Billing billing = 7;
    string description = 8;
    optional string private_description = 9;
    optional string description_format = 10;
    repeated Metadata metadata = 11;
    optional Task task = 12;
    optional string timeline_template_id = 13;
    repeated Phase phases = 14;
    repeated Event events = 15;
    repeated Term terms = 16;
    repeated PrizeSet prize_sets = 17;
    repeated string tags = 18;
    optional int32 project_id = 19;
    optional google.protobuf.Timestamp start_date = 20;
    optional google.protobuf.Timestamp end_date = 21;
    string status = 22;
    repeated string attachments = 23;
    repeated string groups = 24;
    repeated Winner winners = 25;
    repeated Discussion discussions = 26;
    optional Overview overview = 27;
    string created_by = 28;
    optional string updated_by = 29;
    google.protobuf.Timestamp created = 30;
    optional google.protobuf.Timestamp updated = 31;

    message Legacy {
        Track track = 1;
        SubTrack sub_track = 2;
        int32 forum_id = 3;
        int32 direct_project_id = 4;
        ReviewType review_type = 5;
        optional int32 review_scorecard_id = 6;
        optional int32 screening_scorecard_id = 7;
        optional topcoder.common.Boolean pure_v5_task = 8;
        optional topcoder.common.Boolean self_service = 9;
        optional string self_service_copilot = 10;
    }
    
    message Billing {
        int32 billing_account_id = 1;
        float markup = 2;
    }

    message Event {
        int32 id = 1;
        string name = 2;
        string key = 3;
    }

    message Term {
        string id = 1;
        string role_id = 2;
    }
    
    message Metadata {
        string name = 1;
        string value = 2;
    }

    message Discussion {
        optional string id = 1;
        string name = 2;
        DiscussionType type = 3;
        string provider = 4;
        string url = 5;
        

        enum DiscussionType {
            CHALLENGE = 0;
        }
    }

    message Phase {
        int32 duration = 1;
        optional google.protobuf.Timestamp scheduled_start_date = 2;
        optional google.protobuf.Timestamp scheduled_end_date = 3;
        optional google.protobuf.Timestamp actual_start_date = 4;
        optional google.protobuf.Timestamp actual_end_date = 5;
        PhaseName name = 6;
        string phase_id = 7;
        string id = 8;
        topcoder.common.Boolean open = 9;
    }

    message Winner {
        string handle = 1;
        int32 placement = 2;
    }
    
    message Task {
        topcoder.common.Boolean is_task = 1;
        topcoder.common.Boolean is_assigned = 2;
        optional int32 member_id = 3;
    }

    message Overview {
        
    }

    message PrizeSet {
        message Prize {
            float value = 1;
            string type = 2;
        }

        enum PrizeType {
            PLACEMENT = 0;
            COPILOT = 1;
            REVIEWER_PRIZE = 2;
        }

        PrizeType type = 1;
        string description = 2;
        repeated Prize prizes = 3;
    }
}

message CreateChallengeInput {
    Challenge challenge = 1;
}